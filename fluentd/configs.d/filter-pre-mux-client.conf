<match **>
  @type forward
  @log_level "#{ENV['FORWARD_INPUT_LOG_LEVEL'] || ENV['LOG_LEVEL'] || 'warn'}"
  <security>
    self_hostname ${hostname}
    shared_key "#{File.open('/etc/fluent/muxkeys/shared_key') do |f| f.readline end.rstrip}"
  </security>
  transport tls
  tls_cert_path /etc/fluent/muxkeys/ca
  tls_verify_hostname false # internal facing mux does not have correct hostname in cert
  <server>
    host logging-mux
    port "#{ENV['FORWARD_LISTEN_PORT'] || '24284'}"
  </server>
  <buffer>
    @type file
    path '/var/lib/fluentd/buffer-mux-client'
    flush_interval "#{ENV['FORWARD_FLUSH_INTERVAL'] || '5s'}"
    flush_thread_count "#{ENV['FORWARD_FLUSH_THREAD_COUNT'] || 1}"
    flush_at_shutdown "#{ENV['FLUSH_AT_SHUTDOWN'] || 'false'}"
    queued_chunks_limit_size "#{ENV['BUFFER_QUEUE_LIMIT'] || '1024' }"
    chunk_limit_size "#{ENV['BUFFER_SIZE_LIMIT'] || '1m' }"
    retry_max_interval "#{ENV['FORWARD_RETRY_WAIT'] || '300'}"
    retry_forever true
    # the systemd journald 0.0.8 input plugin will just throw away records if the buffer
    # queue limit is hit - 'block' will halt further reads and keep retrying to flush the
    # buffer to the remote - default is 'exception' because in_tail handles that case
    overflow_action "#{ENV['BUFFER_QUEUE_FULL_ACTION'] || 'exception'}"
  </buffer>
</match>
